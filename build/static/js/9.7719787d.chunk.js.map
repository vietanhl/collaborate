{"version":3,"sources":["components/Stepper/Stepper.tsx","containers/AvailabilityContainer/AvailabilityContainer.tsx","components/Calendar/Calendar.tsx","components/ConfirmBookingButton/ConfirmBookingButton.tsx","views/Book.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","width","backButton","marginRight","spacing","instructions","marginTop","marginBottom","body","fontFamily","HorizontalLabelPositionBelowStepper","classes","steps","useState","activeStep","setActiveStep","useEffect","window","location","pathname","className","alternativeLabel","map","label","key","getAvailabilityByTreatment","date","id","a","response","fetchData","axios","post","endpoints","treatmentIds","dateTime","then","res","data","catch","error","console","log","replace","baseURL","Calendar","props","Date","toISOString","split","startDate","setStartDate","startTime","setStartTime","availableTime","setAvailableTime","api","treatmentId","length","availableTimes","undefined","fetchMyApi","parentCallBack","today","arrayOfTimes","x","slice","toDateString","Grid","container","item","xs","alignContent","justify","selected","onChange","inline","minDate","showDisabledMonthNavigation","timeSlot","Button","variant","size","onClick","style","minWidth","active","ContainerUl","styled","ul","ContainerLi","li","ConfirmBookingButton","to","state","time","treatmentName","disabled","Object","keys","values","Book","setDate","setTime","Stepper","PageTitle","title"],"mappings":"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","file":"static/js/9.7719787d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '600px',\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    body: {\n      fontFamily: 'Abril Fatface',\n    },\n  })\n);\n\nfunction getSteps() {\n  return [\n    'Select a treatment',\n    'Select a time',\n    'Fill in your contact details',\n    'Booking summary',\n  ];\n}\n\nexport default function HorizontalLabelPositionBelowStepper() {\n  const classes = useStyles();\n  const steps = getSteps();\n  const [activeStep, setActiveStep] = useState(0);\n\n  useEffect(() => {\n    switch (window.location.pathname) {\n      case '/treatment':\n        setActiveStep(0);\n        break;\n      case '/book':\n        setActiveStep(1);\n        break;\n      case '/confirmation':\n        setActiveStep(2);\n        break;\n      case '/order':\n        setActiveStep(3);\n        break;\n      default:\n        setActiveStep(-1);\n    }\n  }, []);\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel classes={{ alternativeLabel: classes.body }}>\n              {label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport * as endpoints from '../../Api/endpoints';\nimport { baseURL } from '../../config/merchantConfig/config';\n\nexport const getAvailability = async (year: any, month: any, day: any) => {\n  var response: any = null;\n\n  const fetchData = async () => {\n    await axios\n      .get(`${endpoints.availability}/${year}/${month}/${day}`)\n      .then((res) => {\n        response = JSON.stringify(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  await fetchData();\n  return response;\n};\n\nexport const getAvailabilityByTreatment = async (date: string, id: any) => {\n  var response: any = null;\n  const fetchData = async () => {\n    await axios\n      .post(`${endpoints.availability}`, {\n        treatmentIds: id,\n        dateTime: date,\n      })\n      .then((res) => {\n        response = res.data;\n      })\n      .catch((error) => {\n        console.log('error: ' + error);\n        return window.location.replace(`${baseURL}/error`);\n      });\n  };\n  await fetchData();\n  return response;\n};\n","import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Button from 'react-bootstrap/Button';\nimport Grid from '@material-ui/core/Grid';\nimport * as api from '../../containers/AvailabilityContainer/AvailabilityContainer';\n\nconst Calendar: React.FunctionComponent<any> = (props: any) => {\n  // console.log('CALENDAR - ' + JSON.stringify(props));\n  // console.log('CALENDAR - ' + props.treatmentId);\n  const [startDate, setStartDate] = useState(\n    new Date().toISOString().split('T')[0]\n  );\n  const [startTime, setStartTime] = useState();\n\n  //validation for no available times\n  const [availableTime, setAvailableTime] = useState(['No times available']);\n\n  useEffect(() => {\n    async function fetchMyApi() {\n      const res = await api.getAvailabilityByTreatment(\n        new Date(startDate).toISOString(),\n        props.treatmentId\n      );\n      if (res.length !== 0) {\n        availableTimes(res);\n      }\n    }\n    if (props.treatmentId !== undefined) {\n      fetchMyApi();\n    }\n  }, [startDate, props.treatmentId]);\n\n  useEffect(() => {\n    props.parentCallBack(startDate, startTime);\n  }, [startDate, startTime]);\n\n  var today = new Date();\n  const availableTimes = (res: any) => {\n    if (res.length !== 0) {\n      const arrayOfTimes = res.map((x: string) => {\n        return x.split('T')[1].slice(0, 5);\n      });\n      setAvailableTime(arrayOfTimes);\n      console.log(arrayOfTimes);\n    }\n  };\n\n  useEffect(() => {\n    if (startDate === undefined) {\n    } else {\n      console.log(new Date(startDate).toISOString().split('T')[0]);\n      setStartDate(new Date(startDate).toISOString().split('T')[0]);\n    }\n  }, [startDate]);\n\n  return (\n    <>\n      <p>{today.toDateString()}</p>\n      <Grid container>\n        <Grid item xs={12} alignContent=\"space-between\">\n          <Grid container justify=\"center\" spacing={10}>\n            <Grid item key={0}>\n              <DatePicker\n                selected={new Date(startDate)}\n                onChange={(date: any) => setStartDate(date)}\n                inline\n                minDate={new Date()}\n                showDisabledMonthNavigation\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <br />\n      <Grid item xs={6} alignContent=\"center\">\n        <Grid item key={0}>\n          {availableTime.map((timeSlot: any) => {\n            return (\n              <Button\n                variant=\"outline-secondary\"\n                size=\"sm\"\n                onClick={() => setStartTime(timeSlot)}\n                style={{ width: '8%', minWidth: '50px' }}\n                active={startTime === timeSlot ? true : false}\n              >\n                {timeSlot}\n              </Button>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Calendar;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst ContainerUl = styled.ul`\n  padding-top: 20px;\n  text-align: center;\n  list-style: none;\n  font-family: 'Abril Fatface', cursive;\n\n  &:hover {\n    color: #282c34;\n  }\n`;\n\nconst ContainerLi = styled.li`\n  display: inline;\n  padding-right: 20px;\n\n  &:hover {\n    color: #282c34;\n  }\n`;\n\nconst ConfirmBookingButton: React.FunctionComponent = (props: any) => {\n  const isDisabled = () => {\n    if (\n      props.treatmentId === undefined ||\n      Object.keys(props.treatmentId).length === 0 ||\n      props.treatmentId === 0 ||\n      Object.values(props.treatmentId)[0] === 0\n    ) {\n      return true;\n    } else if (props.time === undefined || props.time === null) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const bookAppointment = () => {\n    //call api\n  };\n  return (\n    <>\n      <ContainerUl>\n        <ContainerLi>\n          {' '}\n          <Link\n            to={{\n              pathname: '/treatment',\n              state: {\n                treatmentId: props.treatmentId,\n                date: props.date,\n                time: props.time,\n                treatmentName: props.treatmentName,\n              },\n            }}\n          >\n            <Button variant=\"outline-secondary\" size=\"lg\">\n              Back\n            </Button>\n          </Link>\n        </ContainerLi>\n        <ContainerLi>\n          <Link\n            to={{\n              pathname: '/confirmation',\n              state: {\n                treatmentId: props.treatmentId,\n                date: props.date,\n                time: props.time,\n                treatmentName: props.treatmentName,\n              },\n            }}\n          >\n            <Button\n              variant=\"outline-secondary\"\n              size=\"lg\"\n              onClick={bookAppointment}\n              disabled={isDisabled()}\n            >\n              Next\n            </Button>\n          </Link>\n        </ContainerLi>\n      </ContainerUl>\n    </>\n  );\n};\n\nexport default ConfirmBookingButton;\n","import React, { useState } from 'react';\nimport PageTitle from '../components/PageTitle';\nimport Calendar from '../components/Calendar/Calendar';\nimport ConfirmBookingButton from '../components/ConfirmBookingButton/ConfirmBookingButton';\nimport Stepper from '../components/Stepper/Stepper';\n\nconst Book: React.FunctionComponent = (props: any) => {\n  const [date, setDate] = useState();\n  const [time, setTime] = useState();\n\n  const treatmentSelected = (date: any, time: any) => {\n    setDate(date);\n    setTime(time);\n  };\n\n  return (\n    <>\n      <Stepper />\n      <PageTitle title=\"Select an appointment time\" />\n      <Calendar\n        treatmentId={props.location.state.treatmentId}\n        treatmentName={props.location.state.treatmentName}\n        parentCallBack={treatmentSelected}\n      />\n      <ConfirmBookingButton\n        date={date}\n        time={time}\n        treatmentId={props.location.state.treatmentId}\n        treatmentName={props.location.state.treatmentName}\n        {...props}\n      />\n    </>\n  );\n};\n\nexport default Book;\n"],"sourceRoot":""}